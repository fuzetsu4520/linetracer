#ifndef __BUZZER_H
#define __BUZZER_H

#include <stdint.h>

//--------------------------------------------------------------------
// 定数・グローバル変数定義
//--------------------------------------------------------------------
typedef unsigned char BYTE;

// 周波数設定
enum {
	 Mt  = 0,	// 無音 (mute)

	_A3  = 55,
	_A3s = 58,
	_B3  = 62,

	_C2  = 65,
	_C2s = 69,
	_D2  = 73,
	_D2s = 78,
	_E2  = 82,
	_F2  = 87,
	_F2s = 92,
	_G2  = 98,
	_G2s = 104,
	_A2  = 110,
	_A2s = 117,
	_B2  = 123,

	_C1  = 131,
	_C1s = 139,
	_D1  = 147,
	_D1s = 156,
	_E1  = 165,
	_F1  = 175,
	_F1s = 185,
	_G1  = 196,
	_G1s = 208,
	_A1  = 220,
	_A1s = 233,
	_B1  = 247,

	C0  = 262,
	C0s = 277,
	D0  = 294,
	D0s = 311,
	E0  = 330,
	F0  = 349,
	F0s = 370,
	G0  = 392,
	G0s = 415,
	A0  = 440,
	A0s = 466,
	B0  = 494,

	C1  = 523,
	C1s = 554,
	D1  = 587,
	D1s = 622,
	E1  = 659,
	F1  = 698,
	F1s = 740,
	G1  = 784,
	G1s = 831,
	A1  = 880,
	A1s = 932,
	B1  = 988,

	C2  = 1047,
	C2s = 1109,
	D2  = 1175,
	D2s = 1245,
	E2  = 1319,
	F2  = 1397,
	F2s = 1480,
	G2  = 1568,
	G2s = 1661,
};

// 音符長(ms) 設定
enum {
	n1    = 1600,	// 全音符	　 	（4拍）
	n2p   = 1200,	// 付点２分音符	（3拍）
	n2    = 800,	// ２分音符	　	（2拍）
	n4p   = 600,	// 付点４分音符	（1 + 1/2拍）
	n4    = 400,	// ４分音符		（1拍）
	n8p   = 300,	// 付点８分音符	（1/2 + 1/4拍）
	n8    = 200,	// ８分音符		（1/2拍）
	n16   = 100,	// １６分音符		（1/4拍）
	n32   = 50,		// ３２分音符		（1/8拍）
	n_end = 0,
};

// 命名規則が異なる為、変換を目的にdefine関数を定義
#define	set_buzzer(freq)		    BuzzerSet(freq, 0)
#define	set_freq(ch, freq)			BuzzerFreq(ch, freq)
#define start_buzzer()				BuzzerStart()
#define stop_buzzer()				BuzzerStop()
#define is_buzzer()					isBuzzer()


//--------------------------------------------------------------------
// プロトタイプ宣言
//--------------------------------------------------------------------
/*
 タイマ初期化
 */
void Timer32Init(void);

/*
 ブザーの初期化
 */
void init_buzzer();

// 単音／重音モード設定
// 単音モード時	割り込み周期 ＝ ブザー周期/2
// 重音モード時	割り込み周期 ＝ 約20μsec  → （注意）高負荷につき main 処理に影響あり
void set_multi_tone_mode (int st);

/*
周波数の設定
ブザーを鳴らす際の周波数を設定
引数：　freq : 周波数 (Hz)
      vol  : ダミー（互換用）
戻り値：無し
*/
void BuzzerSet(uint32_t freq, BYTE vol);

/*
周波数の設定
ブザーを鳴らす際の周波数を設定
引数：　ch:   チャンネル  （0～1）
	  freq: 周波数 (Hz)
戻り値：無し
*/
void BuzzerFreq(BYTE ch, uint32_t freq);

/*
開始
ブザーを鳴らし始める。BuzzerStop()関数を呼ぶまでなり続ける。
引数：無し
戻り値：無し
*/
void BuzzerStart();

/*
停止
ブザーを止める。
引数：無し
戻り値：無し
*/
void BuzzerStop();

/*
ブザーが鳴っているかどうか確認
引数：無し
戻り値：	0：鳴っていない
			1：鳴っている
*/
BYTE isBuzzer();

#endif
